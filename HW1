JSON
 1. Создать внешний репозиторий c названием JSON - Создать репозиторий JSON на github
 2. Клонировать репозиторий JSON на локальный компьютер - git clone git@github.com:OlgaTeselkina/JSON.git
 3. Внутри локального JSON создать файл “new.json” - cd JSON / cat > new.json
 4. Добавить файл под гит - git add new.json
 5. Закоммитить файл - git commit -m "Добавление нового файла"
 6. Отправить файл на внешний GitHub репозиторий - git push
 7. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON - cat >> new.json
 8. Отправить изменения на внешний репозиторий - git add new.json / git commit -m "Add changes to the file" / git push
 9. Создать файл preferences.json - cat > preferences.json
 10. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON: 
{
  "favouriteMovie": "Midnight in Paris",
  "favouriteSeries": "The Office",
  "favouriteSeason": "autumn",
  "travelDestination": "Finland"
}
 
 11. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON: 
 {
   "skills": "Terminal", "Git", "SQL", "Postman", "Charles", "Fiddler"
 }  
 12. Отправить сразу 2 файла на внешний репозиторий - git add preferences.json sklls.json / git commit -m "Two more files" / git push
 13. На веб интерфейсе создать файл bug_report.json - Add file / Create new file
 14. Сделать Commit changes (сохранить) изменения на веб интерфейсе - Commit changes
 15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 16. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 17. Синхронизировать внешний и локальный репозиторий JSON - git pull
 
 XML
 18. Создать внешний репозиторий c названием XML.
 19. Клонировать репозиторий XML на локальный компьютер - git clone git@github.com:OlgaTeselkina/XML.git
 20. Внутри локального XML создать файл “new.xml” - cat > new.xml
 21. Добавить файл под гит - git add new.xml
 22. Закоммитить файл - git commit -m "Add new xml file"
 23. Отправить файл на внешний GitHub репозиторий - git push
 24. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML - cat >> new.xml 

<?xml version="1.0"?>
<ME>
  <NAME>OLGA</NAME>
  <AGE>31</AGE>
  <PETS>One dog</PETS>
  <PETNAME>Woody</PETNAME>
  <PETBREED>Poodle</PETBREED>
</CAT>

 25. Отправить изменения на внешний репозиторий git add new.xml / git commit -m "Add changes to the file" / git push
 26. Создать файл preferences.xml - cat > preferences.xml
 27. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML - cat >> preferences.xml 

<?xml version="1.0"?>
<ME>
  <NAME>OLGA</NAME>
  <FAVMOVIE>Midnight in Paris</FAVMOVIE>
  <FAVTVSHOW>The Office</FAVTVSHOW>
  <FAVSEASON>Autumn</FAVSEASON>
  <FAVFOOD>Peaches</FAVFOOD>
</ME>

 28. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML - cat >skills.xml
 
 <?xml version="1.0"?>
<SKILLS>
  <NAME>Terminal, Git, SQL, Postman, Charles, Fiddler</NAME>
</SKILLS>
 
 29. Сделать коммит в одну строку - git add preferences.xml skills.xml / git commit -m "Add two more files"
 30. Отправить сразу 2 файла на внешний репозиторий - git push
 31. На веб интерфейсе создать файл bug_report.xml - Add file / Create new file
 32. Сделать Commit changes (сохранить) изменения на веб интерфейсе - Commit changes
 33. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML 
 34. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 35. Синхронизировать внешний и локальный репозиторий XML - git pull
 
 TXT
 36. Создать внешний репозиторий c названием TXT.
 37. Клонировать репозиторий TXT на локальный компьютер - git clone git@github.com:OlgaTeselkina/TXT.git
 38. Внутри локального TXT создать файл “new.txt” - cat > new.txt
 39. Добавить файл под гит - git add new.txt
 40. Закоммитить файл - git commit -m "Third file"
 41. Отправить файл на внешний GitHub репозиторий - git push
 42. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT - cat >> new.txt
     Olga
     31 years old
     Has one dog 
     Dog's name is Woody
 43. Отправить изменения на внешний репозиторий - git add new.txt / git commit -m "Third file_more information" / git push 
 44. Создать файл preferences.txt - cat > preferences.txt 
 45. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT - cat >> preferences.txt
 46. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT - cat > skills.txt
 47. Сделать коммит в одну строку - git add preferences.txt skills.txt / git commit -m "Txt files"
 48. Отправить сразу 2 файла на внешний репозиторий - git push
 49. На веб интерфейсе создать файл bug_report.txt.
 50. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 51. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 52. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 53. Синхронизировать внешний и локальный репозиторий TXT - git pull

